{"version":3,"sources":["../node_modules/wrappy/wrappy.js","../node_modules/once/once.js","../node_modules/deprecation/dist-web/index.js","../node_modules/@octokit/request-error/dist-src/index.js","../src/inputs/getCoverageModeFrom.ts","../src/inputs/getPullChanges.ts","../src/inputs/parseVitestJsonReports.ts","../src/inputs/getViteConfigPath.ts","../src/inputs/parseCoverageThresholds.ts","../src/inputs/readOptions.ts","../src/report/generateFileUrl.ts","../src/report/getUncoveredLinesFromStatements.ts","../src/report/generateFileCoverageHtml.ts","../src/report/generateHeadline.ts","../src/icons.ts","../src/report/generateSummaryTableHtml.ts","../src/utils/writeSummaryToPR.ts","../src/index.ts"],"names":["require_wrappy","__commonJSMin","exports","module","wrappy","fn","cb","k","wrapper","args","i","ret","require_once","once","onceStrict","f","name","Deprecation","message","import_once","logOnceCode","deprecation","logOnceHeaders","RequestError","statusCode","options","headers","requestCopy","FileCoverageMode","getCoverageModeFrom","input","V","getPullChanges","fileCoverageMode","w","gitHubToken","m","prNumber","octokit","paths","iterator","response","file","error","parseVitestCoverageReport","jsonPath","resolvedJsonSummaryPath","path","jsonSummaryRaw","readFile","parseVitestJsonSummary","jsonSummaryPath","err","stack","j","stripIndent","parseVitestJsonFinal","jsonFinalPath","testFilePath","workingDirectory","filePath","resolvedPath","fs","constants","defaultPaths","getViteConfigPath","searchPath","Y","regex100","regexStatements","regexLines","regexBranches","regexFunctions","parseCoverageThresholds","vitestConfigPath","resolvedViteConfigPath","rawContent","lines","branches","functions","statements","ee","readOptions","p","fileCoverageModeRaw","jsonSummaryCompareInput","jsonSummaryComparePath","processedPrNumber","viteConfigPath","thresholds","generateBlobFileUrl","relativeFilePath","sha","v","getUncoveredLinesFromStatements","s","statementMap","acc","key","lastRange","workspacePath","generateFileCoverageHtml","jsonSummary","jsonFinal","pullChanges","filePaths","formatFileLine","coverageSummary","uncoveredLines","_","url","createRangeURLs","reportData","changedFiles","unchangedFiles","splitFilesByChangeStatus","formatGroupLine","oneLine","caption","range","linkText","urlHash","comparePath","generateHeadline","icons","generateSummaryTableHtml","jsonReport","jsonCompareReport","generateTableRow","reportNumbers","category","threshold","reportCompareNumbers","status","percent","percentDiff","compareString","getCompareString","COMMENT_MARKER","markerPostfix","writeSummaryToPR","summary","userDefinedPrNumber","pullRequestNumber","getPullRequestNumberFromTriggeringWorkflow","commentBody","existingComment","findCommentByBody","commentBodyIncludes","commentsIterator","comments","comment","originalWorkflowRunId","originalWorkflowRun","pullRequest","findPullRequest","headSha","pullRequestsIterator","pullRequests","run","jsonSummaryCompare","tableData","h","fileTable","getWorkflowSummaryURL","C","getMarkerPostfix","owner","repo","runId"],"mappings":"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","file":"index.js","sourcesContent":["// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","class Deprecation extends Error {\n  constructor(message) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'Deprecation';\n  }\n\n}\n\nexport { Deprecation };\n","import { Deprecation } from \"deprecation\";\nimport once from \"once\";\nconst logOnceCode = once((deprecation) => console.warn(deprecation));\nconst logOnceHeaders = once((deprecation) => console.warn(deprecation));\nclass RequestError extends Error {\n  constructor(message, statusCode, options) {\n    super(message);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    this.name = \"HttpError\";\n    this.status = statusCode;\n    let headers;\n    if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n      headers = options.headers;\n    }\n    if (\"response\" in options) {\n      this.response = options.response;\n      headers = options.response.headers;\n    }\n    const requestCopy = Object.assign({}, options.request);\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(\n          / .*$/,\n          \" [REDACTED]\"\n        )\n      });\n    }\n    requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n    Object.defineProperty(this, \"code\", {\n      get() {\n        logOnceCode(\n          new Deprecation(\n            \"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"\n          )\n        );\n        return statusCode;\n      }\n    });\n    Object.defineProperty(this, \"headers\", {\n      get() {\n        logOnceHeaders(\n          new Deprecation(\n            \"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"\n          )\n        );\n        return headers || {};\n      }\n    });\n  }\n}\nexport {\n  RequestError\n};\n","import * as core from '@actions/core';\n\nexport enum FileCoverageMode {\n  All = 'all',\n  Changes = 'changes',\n  None = 'none',\n}\n\nexport function getCoverageModeFrom(input: string): FileCoverageMode {\n  const allEnums = Object.values(FileCoverageMode) as string[];\n  const index = allEnums.indexOf(input);\n  if (index === -1) {\n    core.warning(`Not valid value \"${input}\" for summary mode, used \"changes\"`);\n    return FileCoverageMode.Changes;\n  }\n  return input as FileCoverageMode;\n}\n","import * as core from '@actions/core';\nimport * as github from '@actions/github';\nimport { RequestError } from '@octokit/request-error';\nimport { FileCoverageMode } from './getCoverageModeFrom.js';\n\ntype Octokit = ReturnType<typeof github.getOctokit>;\n\nexport async function getPullChanges(\n  fileCoverageMode: FileCoverageMode\n): Promise<string[]> {\n  // Skip Changes collection if we don't need it\n  if (fileCoverageMode === FileCoverageMode.None) {\n    return [];\n  }\n\n  // Skip Changes collection if we can't do it\n  if (!github.context.payload?.pull_request) {\n    return [];\n  }\n\n  const gitHubToken = core.getInput('github-token').trim();\n  const prNumber = github.context.payload.pull_request.number;\n  try {\n    const octokit: Octokit = github.getOctokit(gitHubToken);\n    const paths: string[] = [];\n\n    core.startGroup(\n      `Fetching list of changed files for PR#${prNumber} from Github API`\n    );\n\n    const iterator = octokit.paginate.iterator(octokit.rest.pulls.listFiles, {\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      pull_number: prNumber,\n      per_page: 100,\n    });\n\n    for await (const response of iterator) {\n      core.info(`Received ${response.data.length} items`);\n\n      for (const file of response.data) {\n        core.debug(`[${file.status}] ${file.filename}`);\n        if (['added', 'modified'].includes(file.status)) {\n          paths.push(file.filename);\n        }\n      }\n    }\n    return paths;\n  } catch (error) {\n    if (\n      error instanceof RequestError &&\n      (error.status === 404 || error.status === 403)\n    ) {\n      core.warning(\n        `Couldn't fetch changes of PR due to error:\\n[${error.name}]\\n${error.message}`\n      );\n      return [];\n    }\n\n    throw error;\n  } finally {\n    core.endGroup();\n  }\n}\n","import { stripIndent } from 'common-tags';\nimport { readFile } from 'node:fs/promises';\nimport path from 'node:path';\nimport * as core from '@actions/core';\nimport type { JsonFinal } from '../types/JsonFinal.js';\nimport type { JsonSummary } from '../types/JsonSummary.js';\n\nconst parseVitestCoverageReport = async <type extends JsonSummary | JsonFinal>(\n  jsonPath: string\n): Promise<type> => {\n  const resolvedJsonSummaryPath = path.resolve(process.cwd(), jsonPath);\n  const jsonSummaryRaw = await readFile(resolvedJsonSummaryPath);\n  return JSON.parse(jsonSummaryRaw.toString()) as type;\n};\n\nexport const parseVitestJsonSummary = async (\n  jsonSummaryPath: string\n): Promise<JsonSummary> => {\n  try {\n    return await parseVitestCoverageReport<JsonSummary>(jsonSummaryPath);\n  } catch (err: unknown) {\n    const stack = err instanceof Error ? err.stack : '';\n    core.setFailed(stripIndent`\n        Failed to parse the json-summary at path \"${jsonSummaryPath}.\"\n        Make sure to run vitest before this action and to include the \"json-summary\" reporter.\n\n        Original Error:\n        ${stack}\n    `);\n\n    // Rethrow to abort the entire workflow\n    throw err;\n  }\n};\n\nexport const parseVitestJsonFinal = async (\n  jsonFinalPath: string\n): Promise<JsonFinal> => {\n  try {\n    return await parseVitestCoverageReport<JsonFinal>(jsonFinalPath);\n  } catch (err: unknown) {\n    const stack = err instanceof Error ? err.stack : '';\n    core.warning(stripIndent`\n      Failed to parse JSON Final at path \"${jsonFinalPath}\".\n      Line coverage will be empty. To include it, make sure to include the \"json\" reporter in your vitest execution.\n\n      Original Error:\n      ${stack}\n    `);\n    return {};\n  }\n};\n","import { stripIndent } from 'common-tags';\nimport { constants, promises as fs } from 'node:fs';\nimport path from 'node:path';\nimport * as core from '@actions/core';\n\nconst testFilePath = async (workingDirectory: string, filePath: string) => {\n  const resolvedPath = path.resolve(workingDirectory, filePath);\n  await fs.access(resolvedPath, constants.R_OK);\n  return resolvedPath;\n};\n\nconst defaultPaths = [\n  'vitest.config.ts',\n  'vitest.config.mts',\n  'vitest.config.cts',\n  'vitest.config.js',\n  'vitest.config.mjs',\n  'vitest.config.cjs',\n  'vite.config.ts',\n  'vite.config.mts',\n  'vite.config.cts',\n  'vite.config.js',\n  'vite.config.mjs',\n  'vite.config.cjs',\n  'vitest.workspace.ts',\n  'vitest.workspace.mts',\n  'vitest.workspace.cts',\n  'vitest.workspace.js',\n  'vitest.workspace.mjs',\n  'vitest.workspace.cjs',\n];\n\nexport const getViteConfigPath = async (\n  workingDirectory: string,\n  input: string\n) => {\n  try {\n    if (input === '') {\n      return await Promise.any(\n        defaultPaths.map((filePath) => testFilePath(workingDirectory, filePath))\n      );\n    }\n\n    return await testFilePath(workingDirectory, input);\n  } catch {\n    const searchPath = input\n      ? path.resolve(workingDirectory, input)\n      : `any default location in \"${workingDirectory}\"`;\n\n    core.warning(stripIndent`\n          Failed to read vite config file at ${searchPath}.\n          Make sure you provide the vite-config-path option if you're using a non-default location or name of your config file.\n\n          Will not include thresholds in the final report.\n      `);\n    return null;\n  }\n};\n","import { promises as fs } from 'node:fs';\nimport path from 'node:path';\nimport * as core from '@actions/core';\nimport type { Thresholds } from '../types/Threshold.js';\n\nconst regex100 = /100\"?\\s*:\\s*true/;\nconst regexStatements = /statements\\s*:\\s*(\\d+)/;\nconst regexLines = /lines:\\s*(\\d+)/;\nconst regexBranches = /branches\\s*:\\s*(\\d+)/;\nconst regexFunctions = /functions\\s*:\\s*(\\d+)/;\n\nexport const parseCoverageThresholds = async (\n  vitestConfigPath: string\n): Promise<Thresholds> => {\n  try {\n    const resolvedViteConfigPath = path.resolve(\n      process.cwd(),\n      vitestConfigPath\n    );\n    const rawContent = await fs.readFile(resolvedViteConfigPath, 'utf8');\n\n    const has100Value = rawContent.match(regex100);\n\n    if (has100Value) {\n      return {\n        lines: 100,\n        branches: 100,\n        functions: 100,\n        statements: 100,\n      };\n    }\n\n    const lines = rawContent.match(regexLines);\n    const branches = rawContent.match(regexBranches);\n    const functions = rawContent.match(regexFunctions);\n    const statements = rawContent.match(regexStatements);\n\n    return {\n      lines: lines ? Number.parseInt(lines[1]) : undefined,\n      branches: branches ? Number.parseInt(branches[1]) : undefined,\n      functions: functions ? Number.parseInt(functions[1]) : undefined,\n      statements: statements ? Number.parseInt(statements[1]) : undefined,\n    };\n  } catch (err: unknown) {\n    core.warning(\n      `Could not read vite config file for tresholds due to an error:\\n ${err}`\n    );\n    return {};\n  }\n};\n","import * as path from 'node:path';\nimport * as core from '@actions/core';\nimport { getCoverageModeFrom } from './getCoverageModeFrom.js';\nimport { getViteConfigPath } from './getViteConfigPath.js';\nimport { parseCoverageThresholds } from './parseCoverageThresholds.js';\n\nexport async function readOptions() {\n  // Working directory can be used to modify all default/provided paths (for monorepos, etc)\n  const workingDirectory = core.getInput('working-directory');\n\n  // all/changes/none\n  const fileCoverageModeRaw = core.getInput('file-coverage-mode');\n  const fileCoverageMode = getCoverageModeFrom(fileCoverageModeRaw);\n\n  const jsonSummaryPath = path.resolve(\n    workingDirectory,\n    core.getInput('json-summary-path') || 'coverage/coverage-summary.json'\n  );\n  const jsonFinalPath = path.resolve(\n    workingDirectory,\n    core.getInput('json-final-path') || 'coverage/coverage-final.json'\n  );\n\n  const jsonSummaryCompareInput = core.getInput('json-summary-compare-path');\n  let jsonSummaryComparePath: string | null = null;\n  if (jsonSummaryCompareInput) {\n    jsonSummaryComparePath = path.resolve(\n      workingDirectory,\n      jsonSummaryCompareInput\n    );\n  }\n\n  const name = core.getInput('name');\n\n  // Get the user-defined pull-request number and perform input validation\n  const prNumber = core.getInput('pr-number');\n  let processedPrNumber: number | undefined = Number(prNumber);\n  if (!Number.isSafeInteger(processedPrNumber) || processedPrNumber <= 0) {\n    processedPrNumber = undefined;\n  }\n  if (processedPrNumber) {\n    core.info(`Received pull-request number: ${processedPrNumber}`);\n  }\n\n  // ViteConfig is optional, as it is only required for thresholds. If no vite config is provided, we will not include thresholds in the final report.\n  const viteConfigPath = await getViteConfigPath(\n    workingDirectory,\n    core.getInput('vite-config-path')\n  );\n  const thresholds = viteConfigPath\n    ? await parseCoverageThresholds(viteConfigPath)\n    : {};\n\n  return {\n    fileCoverageMode,\n    jsonFinalPath,\n    jsonSummaryPath,\n    jsonSummaryComparePath,\n    name,\n    thresholds,\n    workingDirectory,\n    processedPrNumber,\n  };\n}\n","import * as github from '@actions/github';\n\nexport const generateBlobFileUrl = (relativeFilePath: string) => {\n  const sha = github.context.payload.pull_request\n    ? github.context.payload.pull_request.head.sha\n    : github.context.sha;\n\n  return [\n    github.context.serverUrl,\n    github.context.repo.owner,\n    github.context.repo.repo,\n    'blob',\n    sha,\n    relativeFilePath,\n  ].join('/');\n};\n","import type { StatementCoverageReport } from '../types/JsonFinal.js';\n\nexport type LineRange = {\n  start: number;\n  end: number;\n};\n\nexport const getUncoveredLinesFromStatements = ({\n  s,\n  statementMap,\n}: StatementCoverageReport): LineRange[] => {\n  const keys = Object.keys(statementMap);\n\n  const uncoveredLineRanges = keys.reduce<LineRange[]>((acc, key) => {\n    if (s[key] === 0) {\n      const lastRange = acc.at(-1);\n\n      if (lastRange && lastRange.end === statementMap[key].start.line - 1) {\n        lastRange.end = statementMap[key].end.line;\n        return acc;\n      }\n\n      acc.push({\n        start: statementMap[key].start.line,\n        end: statementMap[key].end.line,\n      });\n    }\n    return acc;\n  }, []);\n\n  return uncoveredLineRanges;\n};\n","import { oneLine } from 'common-tags';\nimport * as path from 'node:path';\nimport { FileCoverageMode } from '../inputs/getCoverageModeFrom.js';\nimport type { JsonFinal } from '../types/JsonFinal.js';\nimport type { JsonSummary } from '../types/JsonSummary.js';\nimport { generateBlobFileUrl } from './generateFileUrl.js';\nimport {\n  getUncoveredLinesFromStatements,\n  type LineRange,\n} from './getUncoveredLinesFromStatements.js';\n\ntype FileCoverageInputs = {\n  jsonSummary: JsonSummary;\n  jsonFinal: JsonFinal;\n  fileCoverageMode: FileCoverageMode;\n  pullChanges: string[];\n};\n\nconst workspacePath = process.cwd();\n\nexport const generateFileCoverageHtml = ({\n  jsonSummary,\n  jsonFinal,\n  fileCoverageMode,\n  pullChanges,\n}: FileCoverageInputs) => {\n  const filePaths = Object.keys(jsonSummary).filter((key) => key !== 'total');\n\n  const formatFileLine = (filePath: string) => {\n    const coverageSummary = jsonSummary[filePath];\n    const lineCoverage = jsonFinal[filePath];\n\n    // LineCoverage might be empty if coverage-final.json was not provided.\n    const uncoveredLines = lineCoverage\n      ? getUncoveredLinesFromStatements(jsonFinal[filePath])\n      : [];\n    const relativeFilePath = path.relative(workspacePath, filePath);\n    const url = generateBlobFileUrl(relativeFilePath);\n\n    return `\n      <tr>\n        <td align=\"left\"><a href=\"${url}\">${relativeFilePath}</a></td>\n        <td align=\"right\">${coverageSummary.statements.pct}%</td>\n        <td align=\"right\">${coverageSummary.branches.pct}%</td>\n        <td align=\"right\">${coverageSummary.functions.pct}%</td>\n        <td align=\"right\">${coverageSummary.lines.pct}%</td>\n        <td align=\"left\">${createRangeURLs(uncoveredLines, url)}</td>\n      </tr>`;\n  };\n\n  let reportData = '';\n\n  const [changedFiles, unchangedFiles] = splitFilesByChangeStatus(\n    filePaths,\n    pullChanges\n  );\n\n  if (\n    fileCoverageMode === FileCoverageMode.Changes &&\n    changedFiles.length === 0\n  ) {\n    return 'No changed files found.';\n  }\n\n  if (changedFiles.length > 0) {\n    reportData += `\n\t\t\t${formatGroupLine('Changed Files')} \n\t\t\t${changedFiles.map(formatFileLine).join('')}\n\t\t`;\n  }\n\n  if (fileCoverageMode === FileCoverageMode.All && unchangedFiles.length > 0) {\n    reportData += `\n\t\t\t${formatGroupLine('Unchanged Files')}\n\t\t\t${unchangedFiles.map(formatFileLine).join('')}\n\t\t`;\n  }\n\n  return oneLine`\n    <table>\n      <thead>\n        <tr>\n         <th align=\"left\">File</th>\n         <th align=\"right\">Stmts</th>\n         <th align=\"right\">% Branch</th>\n         <th align=\"right\">% Funcs</th>\n         <th align=\"right\">% Lines</th>\n         <th align=\"left\">Uncovered Lines</th>\n        </tr>\n      </thead>\n      <tbody>\n      ${reportData}\n      </tbody>\n    </table>\n  `;\n};\n\nfunction formatGroupLine(caption: string): string {\n  return `\n\t\t<tr>\n\t\t\t<td align=\"left\" colspan=\"6\"><b>${caption}</b></td>\n\t\t</tr>\n\t`;\n}\n\nfunction createRangeURLs(uncoveredLines: LineRange[], url: string): string {\n  return uncoveredLines\n    .map((range) => {\n      let linkText = `${range.start}`;\n      let urlHash = `#L${range.start}`;\n\n      if (range.start !== range.end) {\n        linkText += `-${range.end}`;\n        urlHash += `-L${range.end}`;\n      }\n\n      return `<a href=\"${url}${urlHash}\" class=\"text-red\">${linkText}</a>`;\n    })\n    .join(', ');\n}\n\nfunction splitFilesByChangeStatus(\n  filePaths: string[],\n  pullChanges: string[]\n): [string[], string[]] {\n  return filePaths.reduce(\n    ([changedFiles, unchangedFiles], filePath) => {\n      // Pull Changes has filePaths relative to the git repository, whereas the jsonSummary has filePaths relative to the workspace.\n      // So we have to convert the filePaths to be relative to the workspace.\n      const comparePath = path.relative(workspacePath, filePath);\n      if (pullChanges.includes(comparePath)) {\n        changedFiles.push(filePath);\n      } else {\n        unchangedFiles.push(filePath);\n      }\n      return [changedFiles, unchangedFiles];\n    },\n    [[], []] as [string[], string[]]\n  );\n}\n","type HeadlineArgs = {\n  workingDirectory?: string;\n  name?: string;\n};\n\nexport function generateHeadline(options: HeadlineArgs) {\n  if (options.name && options.workingDirectory !== './') {\n    return `Coverage Report for ${options.name} (${options.workingDirectory})`;\n  }\n\n  if (options.name) {\n    return `Coverage Report for ${options.name}`;\n  }\n\n  if (options.workingDirectory !== './') {\n    return `Coverage Report for ${options.workingDirectory}`;\n  }\n\n  return 'Coverage Report';\n}\n","const icons = {\n  red: '🔴',\n  green: '🟢',\n  blue: '🔵',\n  increase: '⬆️',\n  decrease: '⬇️',\n  equal: '🟰',\n  target: '🎯',\n};\n\nexport { icons };\n","import { oneLine } from 'common-tags';\nimport { icons } from '../icons.js';\nimport type { CoverageReport, ReportNumbers } from '../types/JsonSummary.js';\nimport type { Thresholds } from '../types/Threshold.js';\n\nexport function generateSummaryTableHtml(\n  jsonReport: CoverageReport,\n  thresholds: Thresholds = {},\n  jsonCompareReport: CoverageReport | undefined = undefined\n): string {\n  return oneLine`\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t <th align=\"center\">Status</th>\n\t\t\t\t <th align=\"left\">Category</th>\n\t\t\t\t <th align=\"right\">Percentage</th>\n\t\t\t\t <th align=\"right\">Covered / Total</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t${generateTableRow({ reportNumbers: jsonReport.lines, category: 'Lines', threshold: thresholds.lines, reportCompareNumbers: jsonCompareReport?.lines })}\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t${generateTableRow({ reportNumbers: jsonReport.statements, category: 'Statements', threshold: thresholds.statements, reportCompareNumbers: jsonCompareReport?.statements })}\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t${generateTableRow({ reportNumbers: jsonReport.functions, category: 'Functions', threshold: thresholds.functions, reportCompareNumbers: jsonCompareReport?.functions })}\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t${generateTableRow({ reportNumbers: jsonReport.branches, category: 'Branches', threshold: thresholds.branches, reportCompareNumbers: jsonCompareReport?.branches })}\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t`;\n}\n\nfunction generateTableRow({\n  reportNumbers,\n  category,\n  threshold,\n  reportCompareNumbers,\n}: {\n  reportNumbers: ReportNumbers;\n  category: string;\n  threshold?: number;\n  reportCompareNumbers?: ReportNumbers;\n}): string {\n  let status = icons.blue;\n  let percent = `${reportNumbers.pct}%`;\n\n  if (threshold) {\n    percent = `${percent} (${icons.target} ${threshold}%)`;\n    status = reportNumbers.pct >= threshold ? icons.green : icons.red;\n  }\n\n  if (reportCompareNumbers) {\n    const percentDiff = reportNumbers.pct - reportCompareNumbers.pct;\n    const compareString = getCompareString(percentDiff);\n    percent = `${percent}<br/>${compareString}`;\n  }\n\n  return `\n    <td align=\"center\">${status}</td>\n    <td align=\"left\">${category}</td>\n\t\t<td align=\"right\">${percent}</td>\n    <td align=\"right\">${reportNumbers.covered} / ${reportNumbers.total}</td>\n  `;\n}\n\nfunction getCompareString(percentDiff: number): string {\n  if (percentDiff === 0) {\n    return `${icons.equal} <em>±0%</em>`;\n  }\n\n  if (percentDiff > 0) {\n    return `${icons.increase} <em>+${percentDiff.toFixed(2)}%</em>`;\n  }\n\n  // The - char is already included in a negative number\n  return `${icons.decrease} <em>${percentDiff.toFixed(2)}%</em>`;\n}\n","import * as core from '@actions/core';\nimport * as github from '@actions/github';\n\nconst gitHubToken = core.getInput('github-token').trim();\nconst octokit: Octokit = github.getOctokit(gitHubToken);\nconst COMMENT_MARKER = (markerPostfix = 'root') =>\n  `<!-- vitest-coverage-report-marker-${markerPostfix} -->`;\n\ntype Octokit = ReturnType<typeof github.getOctokit>;\n\nexport const writeSummaryToPR = async ({\n  summary,\n  markerPostfix,\n  userDefinedPrNumber,\n}: {\n  summary: typeof core.summary;\n  markerPostfix?: string;\n  userDefinedPrNumber?: number;\n}) => {\n  // The user-defined pull request number takes precedence\n  let pullRequestNumber = userDefinedPrNumber;\n\n  if (!pullRequestNumber) {\n    // If in the context of a pull-request, get the pull-request number\n    pullRequestNumber = github.context.payload.pull_request?.number;\n\n    // This is to allow commenting on pull_request from forks\n    if (github.context.eventName === 'workflow_run') {\n      pullRequestNumber =\n        await getPullRequestNumberFromTriggeringWorkflow(octokit);\n    }\n  }\n\n  if (!pullRequestNumber) {\n    core.info('No pull-request-number found. Skipping comment creation.');\n    return;\n  }\n\n  const commentBody = `${summary.stringify()}\\n\\n${COMMENT_MARKER(markerPostfix)}`;\n  const existingComment = await findCommentByBody(\n    octokit,\n    COMMENT_MARKER(markerPostfix),\n    pullRequestNumber\n  );\n\n  if (existingComment) {\n    await octokit.rest.issues.updateComment({\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      comment_id: existingComment.id,\n      body: commentBody,\n    });\n  } else {\n    await octokit.rest.issues.createComment({\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      issue_number: pullRequestNumber,\n      body: commentBody,\n    });\n  }\n};\n\nasync function findCommentByBody(\n  octokit: Octokit,\n  commentBodyIncludes: string,\n  pullRequestNumber: number\n) {\n  const commentsIterator = octokit.paginate.iterator(\n    octokit.rest.issues.listComments,\n    {\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      issue_number: pullRequestNumber,\n    }\n  );\n\n  for await (const { data: comments } of commentsIterator) {\n    const comment = comments.find((comment) =>\n      comment.body?.includes(commentBodyIncludes)\n    );\n    if (comment) return comment;\n  }\n\n  return;\n}\n\nasync function getPullRequestNumberFromTriggeringWorkflow(\n  octokit: Octokit\n): Promise<number | undefined> {\n  core.info(\n    'Trying to get the triggering workflow in order to find the pull-request-number to comment the results on...'\n  );\n\n  if (!github.context.payload.workflow_run) {\n    core.info(\n      'The triggering workflow does not have a workflow_run payload. Skipping comment creation.'\n    );\n    return undefined;\n  }\n\n  const originalWorkflowRunId = github.context.payload.workflow_run.id;\n\n  const { data: originalWorkflowRun } =\n    await octokit.rest.actions.getWorkflowRun({\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      run_id: originalWorkflowRunId,\n    });\n\n  if (originalWorkflowRun.event !== 'pull_request') {\n    core.info(\n      'The triggering workflow is not a pull-request. Skipping comment creation.'\n    );\n    return undefined;\n  }\n\n  // When the actual pull-request is not coming from a fork, the pull_request object is correctly populated and we can shortcut here\n  if (\n    originalWorkflowRun.pull_requests &&\n    originalWorkflowRun.pull_requests.length > 0\n  ) {\n    return originalWorkflowRun.pull_requests[0].number;\n  }\n\n  // When the actual pull-request is coming from a fork, the pull_request object is not populated (see https://github.com/orgs/community/discussions/25220)\n  core.info(\n    `Trying to find the pull-request for the triggering workflow run with id: ${originalWorkflowRunId} (${originalWorkflowRun.url}) with HEAD_SHA ${originalWorkflowRun.head_sha}...`\n  );\n\n  // The way to find the pull-request in this scenario is to query all existing pull_requests on the target repository and find the one with the same HEAD_SHA as the original workflow run\n  const pullRequest = await findPullRequest(\n    octokit,\n    originalWorkflowRun.head_sha\n  );\n\n  if (!pullRequest) {\n    core.info(\n      'Could not find the pull-request for the triggering workflow run. Skipping comment creation.'\n    );\n    return undefined;\n  }\n\n  return pullRequest.number;\n}\n\nasync function findPullRequest(octokit: Octokit, headSha: string) {\n  core.startGroup('Querying REST API for Pull-Requests.');\n  const pullRequestsIterator = octokit.paginate.iterator(\n    octokit.rest.pulls.list,\n    {\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      per_page: 30,\n    }\n  );\n\n  for await (const { data: pullRequests } of pullRequestsIterator) {\n    core.info(`Found ${pullRequests.length} pull-requests in this page.`);\n    for (const pullRequest of pullRequests) {\n      core.debug(\n        `Comparing: ${pullRequest.number} sha: ${pullRequest.head.sha} with expected: ${headSha}.`\n      );\n      if (pullRequest.head.sha === headSha) {\n        return pullRequest;\n      }\n    }\n  }\n  core.endGroup();\n  return undefined;\n}\n","import * as core from '@actions/core';\nimport * as github from '@actions/github';\nimport { RequestError } from '@octokit/request-error';\nimport { FileCoverageMode } from './inputs/getCoverageModeFrom.js';\nimport { getPullChanges } from './inputs/getPullChanges.js';\nimport {\n  parseVitestJsonFinal,\n  parseVitestJsonSummary,\n} from './inputs/parseVitestJsonReports.js';\nimport { readOptions } from './inputs/readOptions.js';\nimport { generateFileCoverageHtml } from './report/generateFileCoverageHtml.js';\nimport { generateHeadline } from './report/generateHeadline.js';\nimport { generateSummaryTableHtml } from './report/generateSummaryTableHtml.js';\nimport type { JsonSummary } from './types/JsonSummary.js';\nimport { writeSummaryToPR } from './utils/writeSummaryToPR.js';\n\nconst run = async () => {\n  const {\n    fileCoverageMode,\n    jsonFinalPath,\n    jsonSummaryPath,\n    jsonSummaryComparePath,\n    name,\n    thresholds,\n    workingDirectory,\n    processedPrNumber,\n  } = await readOptions();\n\n  const jsonSummary = await parseVitestJsonSummary(jsonSummaryPath);\n\n  let jsonSummaryCompare: JsonSummary | undefined;\n  if (jsonSummaryComparePath) {\n    jsonSummaryCompare = await parseVitestJsonSummary(jsonSummaryComparePath);\n  }\n\n  const tableData = generateSummaryTableHtml(\n    jsonSummary.total,\n    thresholds,\n    jsonSummaryCompare?.total\n  );\n\n  const summary = core.summary\n    .addHeading(generateHeadline({ workingDirectory, name }), 2)\n    .addRaw(tableData);\n\n  if (fileCoverageMode !== FileCoverageMode.None) {\n    const pullChanges = await getPullChanges(fileCoverageMode);\n    const jsonFinal = await parseVitestJsonFinal(jsonFinalPath);\n    const fileTable = generateFileCoverageHtml({\n      jsonSummary,\n      jsonFinal,\n      fileCoverageMode,\n      pullChanges,\n    });\n    summary.addDetails('File Coverage', fileTable);\n  }\n\n  summary.addRaw(\n    `<em>Generated in workflow <a href=${getWorkflowSummaryURL()}>#${github.context.runNumber}</a></em>`\n  );\n\n  try {\n    await writeSummaryToPR({\n      summary,\n      markerPostfix: getMarkerPostfix({ name, workingDirectory }),\n      userDefinedPrNumber: processedPrNumber,\n    });\n  } catch (error) {\n    if (\n      error instanceof RequestError &&\n      (error.status === 404 || error.status === 403)\n    ) {\n      core.warning(\n        `Couldn't write a comment to the pull-request. Please make sure your job has the permission 'pull-request: write'.\n\t\t\t\t Original Error was: [${error.name}] - ${error.message}\n\t\t\t\t`\n      );\n    } else {\n      // Rethrow to handle it in the catch block of the run()-call.\n      throw error;\n    }\n  }\n\n  await summary.write();\n};\n\nfunction getMarkerPostfix({\n  name,\n  workingDirectory,\n}: {\n  name: string;\n  workingDirectory: string;\n}) {\n  if (name) return name;\n  if (workingDirectory !== './') return workingDirectory;\n  return 'root';\n}\n\nfunction getWorkflowSummaryURL() {\n  const { owner, repo } = github.context.repo;\n  const { runId } = github.context;\n  return `${github.context.serverUrl}/${owner}/${repo}/actions/runs/${runId}`;\n}\n\nrun()\n  .then(() => {\n    core.info('Report generated successfully.');\n  })\n  .catch((err) => {\n    core.error(err);\n  });\n"]}